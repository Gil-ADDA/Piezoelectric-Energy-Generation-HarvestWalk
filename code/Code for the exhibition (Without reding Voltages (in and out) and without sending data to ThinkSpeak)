#include <Adafruit_NeoPixel.h>

#define PIN            6  
#define NUMPIXELS      58 

Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
unsigned long lightUpTime = 0;  
const unsigned long LED_ON_DURATION = 10000;  

unsigned long lastSendTime = 0;
const unsigned long sendInterval = 15000; 

const int buttonPin = 2;    
unsigned long pressStartTime = 0; 
int pressCount = 0;        
int combinedPressCount = 0; 
int Press2Count = 0;  

const int button2Pin = 3;  
unsigned long press2StartTime = 0; 
int press2Count = 0;
const int RESET_THRESHOLD = 260; 

int lastSentPressCount = 0;
int lastSentPress2Count = 0;
int lastSentCombinedPressCount = 0;

unsigned long lastResetTime = 0; 
const unsigned long resetInterval = 10800000;  

const int ledPin = 5;

void setup() {
  strip.begin();  
  strip.show();   

  pinMode(buttonPin, INPUT_PULLUP);  
  pinMode(button2Pin, INPUT_PULLUP);
  pinMode(ledPin, OUTPUT); 
}

void loop() {
  int buttonState = digitalRead(buttonPin);

  if (buttonState == LOW) {
    if (pressStartTime == 0) {
      pressStartTime = millis();
      Serial.println("Button pressed! Step detected.");
      
      pressCount++;
      combinedPressCount = pressCount + press2Count;
      updateLEDs(combinedPressCount);
    }

    if (combinedPressCount >= RESET_THRESHOLD) {
      combinedPressCount = 0;  
      pressCount = 0;
      press2Count = 0; 
      resetLEDs();             
    }
  } else {
    if (pressStartTime != 0) {
      Serial.print("Press count (Left) : ");
      Serial.println(pressCount);
      Serial.print("Combined press count of both buttons: ");
      Serial.println(combinedPressCount);

      pressStartTime = 0; 
    }
  }

  int button2State = digitalRead(button2Pin);

  if (button2State == LOW) {
    if (press2StartTime == 0) {
      press2StartTime = millis();
      Serial.println("Second button pressed! Step detected.");
      press2Count++;
      combinedPressCount++;
      updateLEDs(combinedPressCount);
    }
  } else {
    if (press2StartTime != 0) {
      Serial.print("Press count for (Right)second button: ");
      Serial.println(press2Count);
      Serial.print("Combined press count of both buttons: ");
      Serial.println(combinedPressCount);
      press2StartTime = 0;
      if (combinedPressCount >= RESET_THRESHOLD) {
        combinedPressCount = 0;
        resetLEDs();
      }
    }

    if (lightUpTime != 0 && (millis() - lightUpTime >= LED_ON_DURATION)) {
        combinedPressCount = 0;
        lightUpTime = 0;

        for (int i = 0; i < NUMPIXELS; i++) {
            strip.setPixelColor(i, strip.Color(0, 0, 0));  
        }
        strip.show();
    }
  }

  if (millis() - lastResetTime >= resetInterval) {
    pressCount = 0; 
    lastResetTime = millis(); 
    press2Count = 0; 
  }

  delay(100);
}

void updateLEDs(int count) {
  int ledsToLight = count / 4; 
  int brightness = (count % 4) * 62; 

  int redThreshold = NUMPIXELS / 3;      
  int yellowThreshold = 2 * NUMPIXELS / 3; 

  for(int i=0; i<NUMPIXELS; i++) {
    if(i < ledsToLight) {
      if (i < redThreshold) {
        strip.setPixelColor(i, strip.Color(255, 0, 0));
      } else if (i < yellowThreshold) {
        strip.setPixelColor(i, strip.Color(255, 255, 0));
      } else {
        strip.setPixelColor(i, strip.Color(0, 255, 0));
      }
    } else if (i == ledsToLight) {
      if (i < redThreshold) {
        strip.setPixelColor(i, strip.Color(brightness, 0, 0));
      } else if (i < yellowThreshold) {
        strip.setPixelColor(i, strip.Color(brightness, brightness, 0));
      } else {
        strip.setPixelColor(i, strip.Color(0, brightness, 0));
      }
    } else {
      strip.setPixelColor(i, strip.Color(0, 0, 0)); 
    }
  }
  strip.show();
}

void resetLEDs() {
  for (int i = 0; i < NUMPIXELS; i++) {
    strip.setPixelColor(i, strip.Color(0, 0, 0)); 
  }
  strip.show();  
}
